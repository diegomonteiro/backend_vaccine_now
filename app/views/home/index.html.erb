
<style>
    /*body {
    padding: 0;
    margin: 0;
    }
    html, body, #map {
        height: 100%;
        width: 100vw;
    }*/
    html, body {
    padding: 0;
    margin: 0;
    }

    #map{
        height: 550px;
        width: 100%;
    }
</style>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==" crossorigin=""/>
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js" integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==" crossorigin=""></script>

<div id="map"></div>

<script>

    var map = L.map('map').setView([-22.432, -44.432], 13).locate({setView: true, maxZoom: 16, watch: true});

    var vaccination_points = L.layerGroup();

    var trip_id;
    startingPoint = {};

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
		attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
	}).addTo(map);

    map.on('locationfound', onLocationFound);
    map.on('locationerror', onLocationError);

    $(document).ready(function(){
        getVaccinationPoints();

        <% unless current_user.nil?  %>
        getLocation("<%= current_user.name %>");
        <% end %>
    });

    function updateUserLocation(e){
        console.log("User Location: ",e);
    }

    function updateCurrentLocation(){
    var token;
        token = $('meta[name="csrf-token"]').attr('content');
        $.ajax({
          url: "/trips/" + id + "/checkins",
          type: 'post',
          beforeSend: function(xhr) {
            xhr.setRequestHeader('X-CSRF-Token', token);
          },
          data: tripData,
          success: function(response) {
              console.log("Atualizar posição: ", response);
          }
        });
    }

    function onLocationFound(e) {
        var radius = e.accuracy;

        L.marker(e.latlng).addTo(map)
            .bindPopup("Sua localização é de " + radius + " metros a partir deste ponto").openPopup();

        L.circle(e.latlng, radius).addTo(map);

        updateUserLocation(e);
    }

    function onLocationError(e) {
        alert(e.message);
    }

    function saveTrip(positionData){
        var token = "";

        token = $('meta[name="csrf-token"]').attr('content');

        $.ajax({
            url: "/trips",
            type: "post",
            data: positionData,
            beforeSend: function(xhr){
                xhr.setRequestHeader('X-CSRF-Token', token);
            },
            success: function(response){
                var url;
                trip_id= response.id;
                url = window.location.protocol + "//" + window.location.host + "/trips/" + response.uuid;
                console.log("Try save trip: ",response.id);
            }
        })
    }

    function getCurrentLocation(){
        navigator.geolocation.getCurrentPosition(function(position) {
          var data;
          data = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          return updateCurrentLocation(data, tripId);
        });
    }

    function getLocation(name){
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
            var coord, data, timestamp;
            coord = position.coords;
            timestamp = position.timestamp;
            data = {
                lat: coord.latitude,
                lng: coord.longitude,
                name: name
            };
            startingPoint = data;

            console.log("Location : ", data);
            return saveTrip(data);
            });
        }
    }

    function getVaccinationPoints(){
        $.ajax({
            url: "/vaccination_points.json",
            beforeSend: function(){
                //console.log("Preparing request of Vaccination Points");
                vaccination_points.clearLayers();
            },
            success: function(data){
                //console.log("Vaccination Points: ",data);

                $.each(data, function(k,v){
                    var vaccination_point = L.circle([parseFloat(v.latitude), parseFloat(v.longitude)], {radius: v.radius_km * 1000});
                    vaccination_points.addLayer(vaccination_point);
                });

                vaccination_points.eachLayer(function (layer) {
                    //layer.bindPopup('Hello');
                    console.log("Renderizar Custom-Modal: ", layer);
                })

                vaccination_points.addTo(map);
            },
            error: function(error){
                console.error(error);
            }
        })
    }

</script>