
<style>
 
    html, body {
    padding: 0;
    margin: 0;
    }

    #map{
        height: 480px;
        width: 100%;
    }

    .container-fluid {
        width: 100%;
        padding-right: 0px;
        padding-left: 0px;
        margin-right: auto;
        margin-left: auto;
    }
</style>


<div id="map"></div>

<!-- Modal -->
<div class="modal fade" id="vaccination_point_modal" tabindex="-1" aria-labelledby="vaccination_point_modal" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modal_title">Modal title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" id="resume-tab" data-toggle="tab" href="#resume" role="tab" aria-controls="home" aria-selected="true">Informações</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="vaccines-tab" data-toggle="tab" href="#vaccines" role="tab" aria-controls="profile" aria-selected="false">Vacinas</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">Contato</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="report-tab" data-toggle="tab" href="#report" role="tab" aria-controls="contact" aria-selected="false">Relatório</a>
        </li>
        </ul>
        <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="resume" role="tabpanel" aria-labelledby="home-tab">Informações</div>
        <div class="tab-pane fade" id="vaccines" role="tabpanel" aria-labelledby="profile-tab">Vacinas</div>
        <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">Contato</div>
        <div class="tab-pane fade" id="report" role="tabpanel" aria-labelledby="contact-tab">Relatório</div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
        <button type="button" class="btn btn-primary">Avise-me</button>
      </div>
    </div>
  </div>
</div>

<script>

    var map = L.map('map').locate({setView: true, maxZoom: 16, watch: true, maximumAge: 60000, timeout: 1000});

    var vaccination_points = L.layerGroup();
    var user_positions = L.layerGroup();
    var bounds;

    var vaccine_types_json = <%= @vaccine_types.to_json.html_safe %>;
    var diseases_json = <%= @diseases.to_json.html_safe %>;

    user_positions.addTo(map);

    startingPoint = {};

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
		attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
	}).addTo(map);
    
    map.on('locationfound', onLocationFound);
    map.on('locationerror', onLocationError);

    $(window).on("resize", function () {
        //console.log("Redefinir map");
        $("#map").height($(window).height()-58);
        map.invalidateSize();
        //plotar_situacao_atual(casos, caso_selecionado);

    }).trigger("resize");

    $(document).ready(function(){
        getVaccinationPoints();
        <% if user_signed_in?  %>
        getLocation("<%= current_user.id %>");
        <% end %>
    });

    function plotFakeUsers(number){
        bounds = map.getBounds();
        var southWest = bounds.getSouthWest();
        var northEast = bounds.getNorthEast();
        var lngSpan = northEast.lng - southWest.lng;
        var latSpan = northEast.lat - southWest.lat;

        pointsrand=[];

        for(var i=0;i<number;++i)
        {
            var point = [southWest.lat + latSpan * Math.random(),southWest.lng + lngSpan * Math.random()];
            pointsrand.push(point);

            user_positions.addLayer(L.marker(point).bindPopup("Sua localização é de " + 0 + " metros a partir deste ponto"));
            //var marker = L.marker(point).on('click', render_modal));
            user_positions.addLayer(marker);
        }

        console.log("Random Users: ", pointsrand);

    }

    function updateUserLocation(e){
        
        console.log("User Location: ",e);
        //updateCurrentLocation();
        <% if user_signed_in?  %>
        var data = {
            user_id: "<%= current_user.id %>",
            latitude: e.latitude,
            longitude: e.longitude,
            accuracy: e.accuracy
        }

        saveTrip(data);
        <% end %>
    }

    function onLocationFound(e) {
        var radius = e.accuracy;
        
        user_positions.clearLayers();

        var m = L.marker(e.latlng).bindPopup("Sua localização é de " + radius + " metros a partir deste ponto").openPopup();

        //var c = L.circle(e.latlng, radius);

        user_positions.addLayer(m);
        //user_positions.addLayer(c);

        

        updateUserLocation(e);
    }

    function onLocationError(e) {
        //alert(e.message);
        console.log("Erro na Geolocalização: ", e);
        <% if user_signed_in?  %>
            getPathByUser(<%= current_user.id %>);
        <% end %>
    }

    function saveTrip(positionData){
        var token = $('meta[name="csrf-token"]').attr('content');

        var params = "user_position[user_id]="+positionData.user_id+"&";
        params += "user_position[latitude]="+positionData.latitude+"&";
        params += "user_position[longitude]="+positionData.longitude+"&";
        params += "user_position[accuracy]="+positionData.accuracy;

        $.ajax({
            url: "/user_positions",
            type: "post",
            dataType: "json",
            data: params,
            beforeSend: function(xhr){
                xhr.setRequestHeader('X-CSRF-Token', token);
            },
            success: function(response){
                console.log("Posição Registrada: ",response);
            },
            error: function(e){
                //console.log("Erro ao atualizar posição do usuário: ", e);
            }
        })
    }

    function getPathByUser(user_id){
        
        $.ajax({
            url: "/user_positions.json",
            type: "GET",
            success: function(data){
                var vals = _.groupBy(data,function(o){ return o.user_id });

                $.each(vals[user_id], function(k,v){
                    console.log("Posição em: ",v.updated_at,"=> ",v);
                    user_positions.addLayer(L.marker([v.latitude, v.longitude], {options: v}));
                    map.setView([v.latitude, v.longitude],16);
                });
            },
            error: function(e){
                console.error("Erro ao obter posições: ",e)
            }
        })


    }

    function getCurrentLocation(){
        navigator.geolocation.getCurrentPosition(function(position) {
          <% if user_signed_in?  %>
          var data;
          data = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
            user_id: <%= current_user.id%>,
            accuracy: position.coords.accuracy
          };
          //return updateCurrentLocation(data);
          return saveTrip(data);
          <% end %>

          console.log("Current Position: ", position);
        });
    }

    function getLocation(user){

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
            var coord, data, timestamp;
            coord = position.coords;
            timestamp = position.timestamp;
            data = {
                latitude: coord.latitude,
                longitude: coord.longitude,
                user_id: user,
                accuracy: coord.accuracy
            };
            startingPoint = data;

            //console.log("Location : ", data);
            return saveTrip(data);
            });
        }
        else{
            console.error("GPS não habilitado ou autorizado no dispositivo");
            alert("Habilite o GPS");
        }
    }

    function getVaccinationPoints(){
        $.ajax({
            url: "/api/vaccination_points",
            beforeSend: function(){
                //console.log("Preparing request of Vaccination Points");
                vaccination_points.clearLayers();
            },
            success: function(data){
                //console.log("Vaccination Points: ",data);

                $.each(data, function(k,v){
                    var style = getVaccinationPointStyle(v);

                    var remain_doses = v.remain_doses;

                    var vaccination_point = L.circle([parseFloat(v.latitude), parseFloat(v.longitude)], {
                        radius: v.radius_km * 1000,
                        color: style.textColor,
                        fillColor: style.textColor,
                        fill: style.textColor,
                        fillOpacity: 0.1,
                        options: v
                    });

                    vaccination_points.addLayer(
                        L.marker({lat: parseFloat(v.latitude), lng: parseFloat(v.longitude)},
                        {
                            icon: L.BeautifyIcon.icon(style),
                            options: v
                        }).addTo(map));
                    vaccination_points.addLayer(vaccination_point);
                });

                vaccination_points.eachLayer(function (layer) {
                    var html = "";
                    
                    var remain_doses = layer.options.options.remain_doses;
                    var total_doses  = layer.options.options.total_doses;
                    var waste_rate   = layer.options.options.waste_rate;

                    html += "<span><b>"+layer.options.options.name+"</b></span><br/>";
                    html += "<hr/>";
                    html += "<span><b>Doses Disponíveis:</b> "+remain_doses+"<span><br/>";
                    html += "<span><b>Total de Doses:</b> "+total_doses+"<span><br/>";
                    html += "<span><b>Taxa de Disperdício:</b> "+waste_rate.toFixed(2)+"%<span><br/>";
                    html += "<span><b>Data Última Atualização:</b> "+layer.options.options.updated_at+"<span>";

                    html += "<hr/>";
                    //html += "<a href='#' class='btn btn-success btn-sm btn-block' style='color: #ffffff'>Avise-me</a>";

                    //layer.bindPopup(html);
                    layer.on('click',function(e){
                        //console.log("Click: ",e.target.options.options)
                        render_modal(e.target.options.options);
                    });
                    //console.log("Renderizar Custom-Modal: ", layer);

                })

                vaccination_points.addTo(map);
            },
            error: function(error){
                console.error("Erro no Ponto de Vacinação: ", error);
            }
        })
    }

    function render_modal(e){
        console.log(e);
        $("#vaccination_point_modal").find(".modal-title").html(e.vaccination_point_type.cod + " - " + e.name);

        var resume = "";

        resume += "<br/><div class=\"row\">";
            resume += "<div class=\"col-md-4 col-xs-12\">";
                resume += "<div class=\"card bg-light mb-3\">";
                    //resume += "<img src=\"\" class=\"card-img-top\" alt=\"...\">";
                    resume += "<div class=\"card-body\">";
                        resume += "<h5 class=\"card-title\"><b>Localização</b></h5>";
                        resume += "<p class=\"card-text\">"+e.address+"</p>";
                        resume += "<p class=\"card-text\"><b>Tel:</b> "+e.contact_number+"</p>";
                    resume += "</div>";
                    resume += "<ul class=\"list-group list-group-flush\">";
                        resume += "<li class=\"list-group-item\"><b>Total de Doses</b> <span class=\"badge badge-info float-right\">"+e.total_doses+"</span></li>";
                        resume += "<li class=\"list-group-item\"><b>Doses Disponíveis</b> <span class=\"badge badge-success float-right\">"+e.remain_doses+"</span></li>";
                        resume += "<li class=\"list-group-item\"><b>Doses Descartadas</b> <span class=\"badge badge-danger float-right\">"+e.discarded_doses+"</span></li>";
                    resume += "</ul>";
                    resume += "<div class=\"card-body\">";
                        resume += "<div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">";
                            resume += "<button type=\"button\" class=\"btn btn-success\"><i class=\"fas fa-sms\"></i> SMS</button>";
                            resume += "<button type=\"button\" class=\"btn btn-primary\"><i class=\"far fa-compass\"></i> Ver no GPS</button>";
                            resume += "<button type=\"button\" class=\"btn btn-secondary\"><i class='fas fa-phone'></i> Detalhes</button>";
                        resume += "</div>";
                    resume += "</div>";
                resume += "</div>";
            resume += "</div>";
            resume += "<div class=\"col-md-8\">";
                resume += "<div class='table-responsive'>";
                resume += "<table id=\"table_vaccines\" class='table table-condensed table-striped table-bordered'>";
                    resume += "<thead><tr><th>Doença</th><th>Vacina</th><th>Disponíveis</th><th>Descartadas</th><th>Total</th><th>Desp(%)</th></tr></thead>";
                    resume += "<tbody>";
                        $.each(e.vaccinations, function(k,v){
                            //console.log(v);
                            var vaccine_type_obj = getVaccineTypeById(v.vaccine_type_id);

                            resume += "<tr>";
                                resume += "<td>"+getDiseaseById(vaccine_type_obj.disease_id).name+"</td>";
                                resume += "<td>"+vaccine_type_obj.name+"</td>";
                                resume += "<td>"+v.remain_doses+"</td>";
                                resume += "<td>"+v.discarded_doses+"</td>";
                                resume += "<td>"+v.total_doses+"</td>";
                                resume += "<td>"+getWasteRate(v.total_doses,v.discarded_doses).toFixed(2)+"</td>";
                            resume += "</tr>";
                        });
                    resume += "</tbody>";
                resume += "</table>";
                resume += "</div>";
            resume += "</div>";
        resume += "</div>";

        $("#resume").html(resume);
        $("#vaccines").html("Vacinas Teste");
        $("#contact").html("Contato Teste");
        $("#report").html("Relatório Teste");

        $('#table_vaccines').DataTable(
            {
                "language":
                {
                    "url": "https://cdn.datatables.net/plug-ins/1.11.2/i18n/pt_br.json"
                }
            }
        );

        $("#vaccination_point_modal").modal('show');
    }

    function getVaccineTypeById(vaccine_type_id){
        var ret = null;
        $.each(vaccine_types_json,function(k,v){
            if(v.id == vaccine_type_id){
                ret = v;
            }
        })

        return ret;
    }

    function getDiseaseById(disease_id){
        var ret = null;
        $.each(diseases_json,function(k,v){
            if(v.id == disease_id){
                ret = v;
            }
        });
        return ret;
    }

    function getWasteRate(total,discarted){
        return (discarted/total)*100;
    }

    function getVaccinationPointStyle(data){
        var remain_doses = data.remain_doses;

        var options = {
            icon: data.vaccination_point_type.icon_class,
            borderColor: ((remain_doses > 0) ? 'green' : 'red'),
            textColor:   ((remain_doses > 0) ? 'green' : 'red')
        }
        //console.log("Style: ",data);

        return options;
    }

</script>