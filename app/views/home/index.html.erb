
<style>
 
    html, body {
    padding: 0;
    margin: 0;
    }

    #map{
        height: 480px;
        width: 100%;
    }

    .container-fluid {
        width: 100%;
        padding-right: 0px;
        padding-left: 0px;
        margin-right: auto;
        margin-left: auto;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>
<!--<link href="https://cdn.datatables.net/1.13.1/css/jquery.dataTables.min.css" type="text/css" rel="stylesheet" />-->


<div id="map"></div>

<!-- Modal -->
<div class="modal fade" id="vaccination_point_modal" tabindex="-1" aria-labelledby="vaccination_point_modal" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modal_title"></h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" id="resume-tab" data-toggle="tab" href="#resume" role="tab" aria-controls="home" aria-selected="true">Informações</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="vaccines-tab" data-toggle="tab" href="#vaccines" role="tab" aria-controls="profile" aria-selected="false">Vacinas</a>
        </li>
       
        </ul>
        <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="resume" role="tabpanel" aria-labelledby="resume-tab">Informações</div>
        <div class="tab-pane fade" id="vaccines" role="tabpanel" aria-labelledby="vaccines-tab">Vacinas</div>
     
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fa fa-times"></i> Fechar</button>
        <button type="button" id="btn-trace-route" class="btn btn-success"><i class="fa fa-map-pin"></i> Traçar Rota</button>
        <!--<button type="button" class="btn btn-primary"><i class="fas fa-bell"></i> Avise-me</button>-->
      </div>
    </div>
  </div>
</div>

<script>

    var map = L.map('map').locate({setView: true, maxZoom: 16, watch: true, maximumAge: 60000});

    var vaccination_points = L.layerGroup();
    var user_positions = L.layerGroup();
    var user_paths = L.layerGroup();

    var bounds;

    var vaccine_types_json = <%= @vaccine_types.to_json.html_safe %>;
    var diseases_json = <%= @diseases.to_json.html_safe %>;

    user_positions.addTo(map);
    user_paths.addTo(map);

    startingPoint = {};

    let closest_points = [];

    var trace_route = true;

    var h24 = moment().subtract(24,'hours');

    

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
		attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
	}).addTo(map);
    
    map.on('locationfound', onLocationFound);
    map.on('locationerror', onLocationError);

    $("#btn-trace-route").on('click', function(e){
        console.log("Click Trace Route: ", $(this).data());

    })

    $(window).on("resize", function () {
        //console.log("Redefinir map");
        $("#map").height($(window).height()-58);
        map.invalidateSize();
        //plotar_situacao_atual(casos, caso_selecionado);

    }).trigger("resize");

    $(document).ready(function(){
        getVaccinationPoints();
        <% if user_signed_in?  %>
        getLocation("<%= current_user.id %>");
        <% end %>
    });

    function updateUserLocation(e){
        
        console.log("User Location: ",e);
        //updateCurrentLocation();
        <% if user_signed_in?  %>
        var data = {
            user_id: "<%= current_user.id %>",
            latitude: e.latitude,
            longitude: e.longitude,
            accuracy: e.accuracy
        }

        saveTrip(data);
        <% end %>
    }

    function onLocationFound(e) {
        var radius = e.accuracy;
        
        user_positions.clearLayers();

        var m = L.marker(e.latlng).bindPopup("Sua localização é de " + radius + " metros a partir deste ponto").openPopup();
        user_positions.addLayer(m);
        //user_positions.addLayer(c);

        <% if user_signed_in?  %>
            getPathByUser(<%= current_user.id %>);
            updateUserLocation(e);
        <% end %>
    }

    function onLocationError(e) {
        //alert(e.message);
        console.log("Erro na Geolocalização: ", e);
        <% if user_signed_in?  %>
            getPathByUser(<%= current_user.id %>);
        <% end %>
    }

    function saveTrip(positionData){
        var token = $('meta[name="csrf-token"]').attr('content');

        var params = "user_position[user_id]="+positionData.user_id+"&";
        params += "user_position[latitude]="+positionData.latitude+"&";
        params += "user_position[longitude]="+positionData.longitude+"&";
        params += "user_position[accuracy]="+positionData.accuracy;

        $.ajax({
            url: "/user_positions",
            type: "post",
            dataType: "json",
            data: params,
            beforeSend: function(xhr){
                xhr.setRequestHeader('X-CSRF-Token', token);
            },
            success: function(response){
                console.log("Posição Registrada: ",response);
            },
            error: function(e){
                //console.log("Erro ao atualizar posição do usuário: ", e);
            }
        })
    }

    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }


    function getDirections(type,from,to,vaccination_point){

        var dirs = from.lng+","+from.lat+";"+to.lng+","+to.lat;
        var url = 'https://api.mapbox.com/directions/v5/mapbox/'+type+'/'+dirs;

        $.ajax({
            url: url,
            data: {
                access_token: "pk.eyJ1IjoiZGllZ29tb250ZWlybyIsImEiOiJjaWtpeTNucGYwNTdudTBtNjMzeW80Y2FsIn0.D1Y1o7NvJA6hwrKAs_NcIg",
                alternatives: false,
                geometries:"geojson",
                steps: false
            },
            beforeSend: function(){
                user_paths.clearLayers();
            },
            success: function(data){
                //console.log("Rota Localizada: ", data," => ", vaccination_point);
                var rota = data.routes[0];

                let letw = _.groupBy(vaccination_point.vaccinations,'vaccine_type_id');

                $.each(data.routes, function(k,v){
                    //user_paths.addLayer(v.geometry);
                    let path = L.geoJSON(v.geometry, {
                        
                        onEachFeature: onEachFeature,
                        style: function(feature){
                            
                            return {color: "#0872F0", weight: 6, fillOpacity: 1};
                        }
                    });

                    path.on('click', function(e){
                        
                        console.log("Escolher esse caminho!!!", e);
                        
                        let coords = e.layer._latlngs;

                        //console.table("Coords: ", coords);

                        var maps_url = "https://www.google.com.br/maps/dir/";
                        let from = _.first(coords);
                        let to   = _.last(coords);

                        maps_url += from.lat +","+ from.lng+"/"
                        maps_url += to.lat + "," + to.lng;

                        //console.log("Map Link => ", maps_url);
                        window.open(maps_url, '_blank');
                        
                        //getDirections()
                    });
                    user_paths.addLayer(path);
                });
            }
        })
    }

    function renderDirectionsUrl(from, points){
        var maps_url = "https://www.google.com.br/maps/dir/";
        maps_url += from.lat +","+ from.lng+"/"

        console.log("From ", from," => Points: ", points);

        $.each(points, function(k,v){
            maps_url += v.lat + "," + v.lng+"/";
        })

        return maps_url; //.substring(0, maps_url.length-1)
    }

    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 18,
            color: "#0872F0",
            opacity: .4
        });

        layer.bringToFront();
    }

    function resetHighlight(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 6,
            opacity: .6,
            color: '#0872F0'
        });

        layer.bringToFront();
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }


    function metersToKilometers(meters){
        return parseInt(""+(meters/1000));
    }

    function secondsToMinutes(segs){
        return parseInt(""+(segs/60));
    }

    function getPathByUser(user_id){
        
        $.ajax({
            url: "/user_positions.json",
            type: "GET",
            beforeSend: function(){
                user_positions.clearLayers();
                user_paths.clearLayers();
            },
            success: function(data){
               var vals = _.groupBy(data,function(o){ return o.user_id });
               var latlngs = [];
               var bounds = L.latLngBounds();

               $.each(vals, function(key,val_user){

                var positions = _.sortBy(vals[user_id], function(o){ return o.updated_at });

                var last_position = _.last(positions);
                user_positions.addLayer(L.marker([last_position.latitude, last_position.longitude], {options: last_position}).bindPopup("Sua última localização em "+last_position.updated_at));

                bounds.extend({lat: last_position.latitude, lng: last_position.longitude});

                map.eachLayer(function(layer){
                    if(layer._mRadius && trace_route){
                            var from = turf.point([last_position.longitude, last_position.latitude]);
                            var to = turf.point([layer._latlng.lng, layer._latlng.lat]);

                            var options = {units: 'kilometers'};
                            var distance = turf.distance(from, to, options);
                            var radius_km = (layer._mRadius/1000);

                            var dt = moment(layer.options.options.updated_at);
                            
                            //Se a distância estiver no alcance do raio de atendimento e se houver doses disponíveis
                            if(distance <= radius_km && layer.options.options.remain_doses > 0 && dt.isAfter(h24)){
                                //console.log("Layer map: ",layer._latlng, " => Distancia: ", distance," ==> ",layer.options.options);
                                //console.log("Notificar de Ponto de Vacinação: ", layer.options.options," DT: ", dt," <> ",h24);
                                bounds.extend(layer._latlng);
                                
                                closest_points.push({vaccination_point: layer.options.options, distance: distance, radius_km: radius_km, from: from, to: to});
                                getDirections("driving",{lat: last_position.latitude, lng: last_position.longitude},layer._latlng, layer.options.options);
                            }
                    }
                });

                console.log("Closest Points: ", closest_points);

                closest_points = _.orderBy(_.uniqBy(closest_points, function(e){ return e.vaccination_point.id }), ['distance','desc']);

                if(closest_points.length > 0){
                    var msg = "Foram encontrados "+closest_points.length+" próximos da sua localização com vacinas disponíveis! Basta clicar na rota no mapa para ser redirecionado pro Google Maps!";
                    
                    let steps_obj = [];
                    let steps_num = [];

                    $.each(closest_points, function(k,v){

                        let html_table = "Há "+(v.distance).toFixed(2)+"km de distância da sua última localização!<br/><br/><table class='table table-bordered'><thead><tr><th>Vacina</th><th>Disponíveis</th></tr></thead><tbody>"
                        $.each(v.vaccination_point.vaccinations, function(w,x){
                            

                            let vaccine_type = $.grep(vaccine_types_json, function(e){ return e.id == x.vaccine_type_id })[0];
                            let disease = $.grep(diseases_json, function(e){ return e.id == vaccine_type.disease_id })[0];

                            html_table += "<tr><td>"+disease.name+" - "+vaccine_type.name+"</td><td>"+x.remain_doses+"</td></tr>";
                        });
                        
                        html_table += "</tbody></table>";

                        steps_obj.push({
                            title: v.vaccination_point.name,
                            text: "Teste "+(k+1),
                            html: `${html_table}`,
                        });

                        steps_num.push(k+1);
                    });

                    Swal.mixin({
                        input: 'radio',
                        inputOptions: {
                            'Sim': 'Sim',
                            'Não': 'Não'
                        },
                        inputValidator: (value) => {
                            if (!value) {
                            return 'Escolha se quer ou não ir até o local!'
                            }
                            else{

                            }
                        },
                        confirmButtonText: 'Próxima →',
                        cancelButtonText: 'Cancelar',
                        showCancelButton: true,
                        progressSteps: steps_num
                        }).queue(
                            steps_obj
                        ).then((result) => {
                        if (result.value) {
                          
                            let rst_points = [];

                            $.each(result.value, function(k,v){
                                if(v == "Sim"){
                                    //console.log("Ponto Selecionado! => ", closest_points[k]);
                                    let cx = closest_points[k].to.geometry.coordinates;
                                    rst_points.push({lat: cx[1], lng: cx[0]});
                                }
                            });
                            
                            //console.log("CoordsX: ", rst_points);
                            if(rst_points.length > 0){
                                let mapUrl = renderDirectionsUrl({lng: last_position.longitude, lat: last_position.latitude}, rst_points);
                                window.open(mapUrl,'_blank');
                            }

                        }
                        });

                    /*swal(msg, {
                    icon: 'warning',
                    buttons: {
                        cancel: "Cancelar",
                        goto: {
                            text: "Ok!",
                            value: "goto",
                        }
                    },
                    })
                    .then((value) => {
                    switch (value) {
                    
                        case "goto":
                        console.log("Confirmou as rotas!");
                        
                        break;
                    
                        default:
                        trace_route = false;
                        swal("Atenção","Não perca os prazos das vacinas para não perder eficácia!","error");

                        //Limpar rotas
                        user_paths.clearLayers();
                    }
                    });*/
                }

               });

               map.fitBounds(bounds);

            },
            error: function(e){
                console.error("Erro ao obter posições: ",e)
            }
        })


    }

    function getCurrentLocation(){
        navigator.geolocation.getCurrentPosition(function(position) {
          <% if user_signed_in?  %>
          var data;
          data = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
            user_id: <%= current_user.id%>,
            accuracy: position.coords.accuracy
          };
          //return updateCurrentLocation(data);
          return saveTrip(data);
          <% end %>

          console.log("Current Position: ", position);
        });
    }

    function getLocation(user){

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
            var coord, data, timestamp;
            coord = position.coords;
            timestamp = position.timestamp;
            data = {
                latitude: coord.latitude,
                longitude: coord.longitude,
                user_id: user,
                accuracy: coord.accuracy
            };
            startingPoint = data;

            //console.log("Location : ", data);
            return saveTrip(data);
            });
        }
        else{
            console.error("GPS não habilitado ou autorizado no dispositivo");
            //alert("Habilite o GPS");
        }
    }

    function getVaccinationPoints(){
        $.ajax({
            url: "/api/vaccination_points",
            data: { with_remain_doses: true},
            beforeSend: function(){
                //console.log("Preparing request of Vaccination Points");
                vaccination_points.clearLayers();
            },
            success: function(data){
                //console.log("Vaccination Points: ",data);

                $.each(data, function(k,v){
                    var style = getVaccinationPointStyle(v);

                    var remain_doses = v.remain_doses;
                    //console.log("Vac: ", v);
                    
                    var dt = moment(v.updated_at);
                    var lat = parseFloat(v.latitude.replace(/,/g, '.'));
                    var lng = parseFloat(v.longitude.replace(/,/g, '.'));

                    if(!isNaN(lat) && !isNaN(lng)){

                        //Exibindo somente com doses remanescentes depois de 24h
                        if(remain_doses > 0 && dt.isAfter(h24)){
                            var vaccination_point = L.circle([lat, lng], {
                                radius: v.radius_km * 1000,
                                color: style.textColor,
                                fillColor: style.textColor,
                                fill: style.textColor,
                                fillOpacity: 0.1,
                                dashArray: '-',
                                weight: 1.2,
                                options: v
                            });

                            vaccination_points.addLayer(vaccination_point);
                        }

                        var vpoint = L.marker({lat: lat, lng: lng},{
                            icon: L.BeautifyIcon.icon(style),
                            options: v
                        });

                        vaccination_points.addLayer(vpoint).addTo(map);
                    }
                    
                    
                });
                

                vaccination_points.eachLayer(function (layer) {
                    var html = "";
                
                    layer.on('click',function(e){
                        console.log("Click: ",e.target.options.options)
                        render_modal(e.target.options.options);

                    });
                    //console.log("Renderizar Custom-Modal: ", layer);

                })

                vaccination_points.addTo(map);
            },
            error: function(error){
                console.error("Erro no Ponto de Vacinação: ", error);
            }
        })
    }

    function render_modal(e){
        console.log(e);
        $("#vaccination_point_modal").find(".modal-title").html(e.vaccination_point_type.cod + " - " + e.name);

        $("#btn-trace-route").data('coords', e);

        var resume = "";

        resume += "<br/><div class=\"row\">";
            resume += "<div class=\"col-md-4 col-xs-12\">";
                resume += "<div class=\"card bg-light mb-3\">";
                    //resume += "<img src=\"\" class=\"card-img-top\" alt=\"...\">";
                    resume += "<div class=\"card-body\">";
                        resume += "<h5 class=\"card-title\"><b>Localização</b></h5>";
                        resume += "<p class=\"card-text\">"+e.address+"</p>";
                        if(e.contact_number != "" && e.contact_number){
                            resume += "<p class=\"card-text\"><b>Tel:</b> "+e.contact_number+"</p>";
                        }
                    resume += "</div>";
                    resume += "<ul class=\"list-group list-group-flush\">";
                        resume += "<li class=\"list-group-item\"><b>Total de Doses</b> <span class=\"badge badge-secondary float-right\">"+e.total_doses+"</span></li>";
                        resume += "<li class=\"list-group-item\"><b>Doses Disponíveis</b> <span class=\"badge badge-info float-right\">"+e.remain_doses+"</span></li>";
                        resume += "<li class=\"list-group-item\"><b>Doses Aplicadas</b> <span class=\"badge badge-success float-right\">"+(e.total_doses - (e.discarded_doses + e.remain_doses))+"</span></li>";
                        resume += "<li class=\"list-group-item\"><b>Doses Descartadas</b> <span class=\"badge badge-danger float-right\">"+e.discarded_doses+"</span></li>";
                    resume += "</ul>";
                resume += "</div>";
            resume += "</div>";
            resume += "<div class=\"col-md-8\">";
                resume += "<div class='table-responsive'>";
                resume += "<table id=\"table_vaccines\" class='table table-condensed table-striped table-bordered'>";
                    resume += "<thead><tr><th>Doença</th><th>Vacina</th><th>Disponíveis</th><th>Descartadas</th><th>Total</th><th>Desp(%)</th><th>Atualizado Em?</th></tr></thead>";
                    resume += "<tbody>";
                        $.each(e.vaccinations, function(k,v){
                            console.log(v);
                            var vaccine_type_obj = getVaccineTypeById(v.vaccine_type_id);

                            resume += "<tr>";
                                resume += "<td>"+getDiseaseById(vaccine_type_obj.disease_id).name+"</td>";
                                resume += "<td>"+vaccine_type_obj.name+"</td>";
                                resume += "<td>"+v.remain_doses+"</td>";
                                resume += "<td>"+v.discarded_doses+"</td>";
                                resume += "<td>"+v.total_doses+"</td>";
                                resume += "<td>"+getWasteRate(v.total_doses,v.discarded_doses).toFixed(2)+"</td>";
                                resume += "<td>"+moment(v.updated_at).format("YYYY-MM-DD HH:mm")+"</td>"
                            resume += "</tr>";
                        });
                    resume += "</tbody>";
                resume += "</table>";
                resume += "</div>";
            resume += "</div>";
        resume += "</div>";

        $("#resume").html(resume);

        var vaccines = "<div id='chart-vaccines' style=\"width:100%; height:400px;\"></div>";
        $("#vaccines").html(vaccines);

        var chart_vaccines = Highcharts.chart('chart-vaccines', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Vacinas aplicadas por tipo de Doença'
            },
            subtitle: {
                text: 'Clique nas colunas para ver o detalhamento.'
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total de doses aplicadas'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}</b><br/>'
            },

            series: [
                {
                    name: "Vacinas",
                    colorByPoint: true,
                    data: [
                        {
                            name: "Covid-19",
                            y: 25,
                            drilldown: "Covid-19"
                        },
                        {
                            name: "Influenza",
                            y: 25,
                            drilldown: "Influenza"
                        },
                        {
                            name: "Poliomelite",
                            y: 25,
                            drilldown: "Poliomelite"
                        },
                        {
                            name: "Febre Amarela",
                            y: 10,
                            drilldown: "Febre Amarela"
                        },
                        
                        {
                            name: "Outras",
                            y: 15,
                            drilldown: null
                        }
                    ]
                }
            ],
            drilldown: {
                series: [
                    {
                        name: "Covid-19",
                        id: "Covid-19",
                        data: [
                            [
                                "2021-01-01",
                                10
                            ],
                            [
                                "2021-01-02",
                                13
                            ],
                            [
                                "2021-01-03",
                               50
                            ],
                            [
                                "2021-01-04",
                                14
                            ],
                            [
                                "2021-01-05",
                                88
                            ],
                            [
                                "2021-01-06",
                                56
                            ],
                            [
                                "2021-01-07",
                                45
                            ],
                            [
                                "2021-01-08",
                                49
                            ],
                            [
                                "2021-01-09",
                                32
                            ],
                            [
                                "2021-01-10",
                                29
                            ],
                            [
                                "2021-01-11",
                                79
                            ],
                            [
                                "2021-01-12",
                                18
                            ],
                            [
                                "2021-01-13",
                                100
                            ]
                        ]
                    },
                    {
                        name: "Influenza",
                        id: "Influenza",
                        data: [
                             [
                                "2021-01-01",
                                50
                            ],
                            [
                                "2021-01-02",
                                30
                            ],
                            [
                                "2021-01-03",
                                53
                            ],
                            [
                                "2021-01-04",
                                14
                            ],
                            [
                                "2021-01-05",
                                88
                            ],
                            [
                                "2021-01-06",
                                56
                            ],
                            [
                                "2021-01-07",
                                45
                            ],
                            [
                                "2021-01-08",
                                49
                            ],
                            [
                                "2021-01-09",
                                32
                            ],
                            [
                                "2021-01-10",
                                29
                            ],
                            [
                                "2021-01-11",
                                79
                            ],
                            [
                                "2021-01-12",
                                18
                            ],
                            [
                                "2021-01-13",
                                13
                            ]
                        ]
                    },
                    {
                        name: "Poliomelite",
                        id: "Poliomelite",
                        data: [
                             [
                                "2021-01-01",
                                10
                            ],
                            [
                                "2021-01-02",
                                13
                            ],
                            [
                                "2021-01-03",
                                53
                            ],
                            [
                                "2021-01-04",
                                14
                            ],
                            [
                                "2021-01-05",
                                88
                            ],
                            [
                                "2021-01-06",
                                56
                            ],
                            [
                                "2021-01-07",
                                45
                            ],
                            [
                                "2021-01-08",
                                49
                            ],
                            [
                                "2021-01-09",
                                32
                            ],
                            [
                                "2021-01-10",
                                29
                            ],
                            [
                                "2021-01-11",
                                79
                            ],
                            [
                                "2021-01-12",
                                18
                            ],
                            [
                                "2021-01-13",
                                13
                            ]
                        ]
                    },
                     {
                        name: "Febre Amarela",
                        id: "Febre Amarela",
                        data: [
                             [
                                "2021-01-01",
                                10
                            ],
                            [
                                "2021-01-02",
                                13
                            ],
                            [
                                "2021-01-03",
                                53
                            ],
                            [
                                "2021-01-04",
                                14
                            ],
                            [
                                "2021-01-05",
                                88
                            ],
                            [
                                "2021-01-06",
                                56
                            ],
                            [
                                "2021-01-07",
                                45
                            ],
                            [
                                "2021-01-08",
                                49
                            ],
                            [
                                "2021-01-09",
                                32
                            ],
                            [
                                "2021-01-10",
                                29
                            ],
                            [
                                "2021-01-11",
                                79
                            ],
                            [
                                "2021-01-12",
                                18
                            ],
                            [
                                "2021-01-13",
                                13
                            ]
                        ]
                    },
                    {
                        name: "Outros",
                        id: "Outros",
                        data: [
                           [
                                "2021-01-01",
                                10
                            ],
                            [
                                "2021-01-02",
                                13
                            ],
                            [
                                "2021-01-03",
                                53
                            ],
                            [
                                "2021-01-04",
                                14
                            ],
                            [
                                "2021-01-05",
                                88
                            ],
                            [
                                "2021-01-06",
                                56
                            ],
                            [
                                "2021-01-07",
                                45
                            ],
                            [
                                "2021-01-08",
                                49
                            ],
                            [
                                "2021-01-09",
                                32
                            ],
                            [
                                "2021-01-10",
                                29
                            ],
                            [
                                "2021-01-11",
                                79
                            ],
                            [
                                "2021-01-12",
                                18
                            ],
                            [
                                "2021-01-13",
                                13
                            ]
                        ]
                    }
                ]
            }
        });

        $('#table_vaccines').DataTable(
            {
                "language":
                {
                    "url": "https://cdn.datatables.net/plug-ins/1.11.2/i18n/pt_br.json"
                }
            }
        );

        $("#vaccination_point_modal").modal('show');
    }

    function call_to(contact_number){
        console.log("Ligar para :", contact_number)
        window.open('tel:'+contact_number)
    }

    function getVaccineTypeById(vaccine_type_id){
        var ret = null;
        $.each(vaccine_types_json,function(k,v){
            if(v.id == vaccine_type_id){
                ret = v;
            }
        })

        return ret;
    }

    function getDiseaseById(disease_id){
        var ret = null;
        $.each(diseases_json,function(k,v){
            if(v.id == disease_id){
                ret = v;
            }
        });
        return ret;
    }

    function getWasteRate(total,discarted){
        return (discarted/total)*100;
    }

    function getVaccinationPointStyle(data){
        var remain_doses = data.remain_doses;
        var dt = moment(data.updated_at);

        var options = {
            icon: data.vaccination_point_type.icon_class,
            borderColor: ((remain_doses > 0 && dt.isAfter(h24)) ? 'green' : 'red'),
            textColor:   ((remain_doses > 0 && dt.isAfter(h24)) ? 'green' : 'red')
        }
        //console.log("Style: ",data);

        return options;
    }

</script>